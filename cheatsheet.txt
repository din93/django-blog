# Работа с виртуальным окружением
virtualenv venv
source venv/Scripts/activate
pip freeze > requirements.txt
virtualenv venv
source venv/Scripts/activate
pip install -r requirements.txt

# Проект
pip install django
mkdir app && cd app
django-admin startproject blogengine
cd blogengine
python manage.py startapp blog

/app/blogengine
./manage.py migrate
./manage.py runserver 8000
#внесение изменений в БД
./manage.py makemigrations
./manage.py migrate
#
./manage.py shell
from blog.models import Post
p = Post(title='First Post', slug='first-post', body='First post body')
p2 = Post.objects.create(title='Second Post', slug='second-post', body='Second post body')
all = Post.objects.all()
post = Post.objects.get(slug='second-post')
post = Post.objects.get(slug__iexact='Second-post')
post = Post.objects.filter(slug__contains='post')
p3 = Post.objects.create(title='Post Number 3', slug='post-number-3', body='Post body Post body Post body')
p4 = Post.objects.create(title='Post Number 4', slug='post-number-4', body='Post body Post body Post body Post body')
p5 = Post.objects.create(title='Post Number 5', slug='post-number-5', body='Post body Post body Post body Post body Post body Post body')

tag = Tag.objects.create(title='Django', slug='django')
post = Post.objects.get(slug='post-number-3')
post.tags.add(tag)
post.tags.all()
tag.posts.all()

from blog.forms import TagForm
from blog.models import Tag
tagform = TagForm({'title': 'Python', 'slug': 'python'})
tagform.is_valid()
tagform.cleaned_data
tagform.errors
tagmodel = Tag(title=tagform.cleaned_data['title'], slug=tagform.cleaned_data['slug'])
tagmodel.save()
tagmodel.id
tagform = TagForm({'title': 'Framework', 'slug': 'framework'})

./manage.py createsuperuser
din/din@din.ru/din